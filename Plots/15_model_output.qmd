
# Model outputs

```{r}
#| label: prep
#| output: false

# source general functions
if (!exists("i_scen")) {
  source(paste0(here::here(), "/1_code/0000_general/general_init.R"))
  params <- init("middle")
}

# run the scenario
run_scen(i_scen, "out")

```

## Population

### by year and scenario

```{r}
#| label: fig-1500
#| fig-cap: population by year and scenario
#| fig-width: 8
#| fig-height: 5

sszplot(pop_yc,
  aes_x = "year", aes_y = "pop", aes_col = "scenario",
  labs_y = "population",
  scale_y = c(0, NA),
  width = 7, height = 4,
  name = plot_name("1500_pop_yc")
)
```

### by year, age and sex

```{r}
#| label: fig-1501
#| fig-cap: population by year, age and sex
#| fig-width: 7
#| fig-height: 7

sszplot(pop_yas,
  aes_x = "age", aes_y = "pop_pyramid", aes_col = "sex",
  aes_ltyp = "year_factor",
  labs_y = "population",
  i_y = 0,
  quotes = c(
    quote(coord_flip()),
    quote(scale_linetype_manual(values = c("dotted", "solid")))
  ),
  width = 6, height = 6,
  name = plot_name("1501_pop_yas")
)
```

### by district and year

```{r}
#| label: fig-1502
#| fig-cap: population by district and year
#| fig-width: 10
#| fig-height: 14

sszplot(pop_dy,
  aes_x = "year", aes_y = "pop",
  wrap = "district", ncol = 4,
  labs_y = "population",
  scale_y = c(0, NA),
  i_x = scen_begin,
  width = 10, height = 14,
  name = plot_name("1502_pop_dy")
)
```

### by district, year and origin

```{r}
#| label: fig-1503
#| fig-cap: population by district, year and origin
#| fig-width: 10
#| fig-height: 14

pop_dyo <- pop %>%
  filter(scenario %in% uni_c[c(1, 3)]) %>%
  group_by(district, year, origin) %>%
  summarize(pop = sum(pop), .groups = "drop")

sszplot(pop_dyo,
  aes_x = "year", aes_y = "pop", aes_col = "origin",
  wrap = "district", ncol = 4,
  labs_y = "population",
  scale_y = c(0, NA),
  i_x = scen_begin,
  width = 10, height = 14,
  name = plot_name("1503_pop_dyo")
)
```

### by district, year and origin; foreign population

```{r}
#| label: fig-1504
#| fig-cap: foreign proportion of population by district, year and origin
#| fig-width: 10
#| fig-height: 14

pop_dyo %>%
  pivot_wider(names_from = "origin", values_from = "pop") %>%
  mutate(foreign_prop = foreign / (Swiss + foreign) * 100) %>%
  sszplot(aes_x = "year", aes_y = "foreign_prop",
          wrap = "district", ncol = 4,
          labs_y = "foreign proportion in %",
          scale_y = c(0, NA),
          i_x = scen_begin,
          width = 10, height = 14,
          name = plot_name("1504_pop_dyo_foreign")
  )
```

### by year, origin, scenario

```{r}
#| label: fig-1505
#| fig-cap: population by year, origin and scenario

pop_yoc <- pop %>%
  group_by(year, origin, scenario) %>%
  summarize(pop = sum(pop), .groups = "drop")

sszplot(pop_yoc,
  aes_x = "year", aes_y = "pop", aes_col = "scenario",
  labs_y = "population",
  grid = c(".", "origin"),
  scale_y = c(0, NA),
  name = plot_name("1505_pop_yoc")
)
```

### by year, origin, scenario; foreign population

```{r}
#| label: fig-1506
#| fig-cap: foreign proportion of population by year, origin and scenario

pop_yoc_prop <- pop_yoc %>%
  pivot_wider(names_from = "origin", values_from = "pop") %>%
  mutate(foreign_prop = foreign / (Swiss + foreign) * 100) %>%
  sszplot(aes_x = "year", aes_y = "foreign_prop", aes_col = "scenario",
          labs_y = "foreign proportion in %",
          scale_y = c(0, NA),
          name = plot_name("1506_pop_yoc_foreign")
  )
```

### by district, year, age and sex

```{r}
#| label: fig-1507
#| fig-cap: population by district, year, age and sex
#| fig-width: 14
#| fig-height: 28

pop %>%
  filter((scenario %in% uni_c[c(1, 3)]) & (year %in% y_sel1)) %>%
  group_by(district, year, age, sex) %>%
  summarize(pop = sum(pop), .groups = "drop") %>%
  mutate(pop_pyramid = if_else(sex == uni_s[1], -pop, pop), year_factor = as.factor(year)) %>%
  sszplot(aes_x = "age", aes_y = "pop_pyramid", aes_col = "sex",
          aes_ltyp = "year_factor",
          labs_y = "population",
          i_y = 0,
          width = 14, height = 28,
          quotes = c(
            quote(facet_wrap(~district, ncol = 4, scales = "free_x")),
            quote(coord_flip()),
            quote(scale_linetype_manual(values = c("dotted", "solid")))
          ),
          name = plot_name("1507_pop_dyas")
  )
```

### by district and year; selected years
plot for slides
```{r}
#| label: fig-1508
#| fig-cap:  population by district and year
#| fig-width: 10
#| fig-height: 6

pop_dy %>% 
  filter(year %in% c(date_end, scen_end_public)) %>% 
  mutate(year_text = paste0("year:", year)) %>% 
  sszplot(aes_x = "district", aes_y = "pop", aes_fill = "year_text",
          geom = "col",
          labs_x = "", labs_y = "people",
          scale_x = uni_d,
          angle = 90,
          name = plot_name("1508_pop_dy_selected-years"),
          width = 9, height = 5
  )
```

### by district, year and scenario

```{r}
#| label: fig-1509
#| fig-cap:  population by district, year and scenario
#| fig-width: 14
#| fig-height: 14

pop %>%
    group_by(district, year, scenario) %>%
    summarize(pop = sum(pop), .groups = "drop") %>% 
  sszplot(aes_x = "year", aes_y = "pop", aes_col = "scenario",
          wrap = "district", ncol = 4,
          labs_y = "population",
          scale_y = c(0, NA),
          i_x = scen_begin,
          gridscale = "free_y",
          width = 14, height = 14,
          name = plot_name("1509_pop_dyc")
  )
```

## population: new and previous scenarios

### by year and scenario

```{r}
#| label: fig-1510
#| fig-cap:  previous and new population by year, scenario
#| fig-width: 8
#| fig-height: 5

sszplot(pop_yc_new_prev,
  aes_x = "year", aes_y = "pop",
  aes_col = "scenario", aes_ltyp = "cat",
  labs_y = "population",
  scale_y = c(0, NA),
  width = 9, height = 5.5,  
  name = plot_name("1510_pop_new-prev_yc")
)
```

### age: 80plus, by yso 

```{r}
#| label: fig-1511
#| fig-cap: previous and new population for 80+ by sex and origin
#| fig-width: 10
#| fig-height: 6

pop_80p_new <- pop_middle %>%
  filter((age >= 80) & (year %in% uniy_scen_public)) %>%  
  group_by(year, sex, origin) %>% 
  summarize(pop = sum_NA(pop), .groups = "drop") %>% 
  mutate(sex = factor(sex, levels = uni_s), origin = factor(origin, levels = uni_o), cat = new_prev[1])  

pop_80p_prev <- sce %>%
  filter((age_class %in% age_3t[9:10]) & (scenario == text_c[3]) & (year %in% uniy_scen_public)) %>% 
  group_by(year, sex, origin) %>% 
  summarize(pop = sum_NA(pop), .groups = "drop") %>% 
  mutate(cat = new_prev[2])

# WHY not piped into plot? used for total (age 80plus, without so)
pop_80p_new_prev <- pop_80p_new %>%
  bind_rows(pop_80p_prev)

sszplot(pop_80p_new_prev,
  aes_x = "year", aes_y = "pop", aes_col = "cat",
  labs_y = "people",
  grid = c("sex", "origin"),
  scale_y = c(0, NA),
  width = 10, height = 6,
  name = plot_name("1511_pop_new-prev_80plus_so")
)
```

### 80plus, by year

```{r}
#| label: fig-1512
#| fig-cap: previous and new population for 80+ by year
#| fig-width: 10
#| fig-height: 6

pop_80p_new_prev %>% 
  group_by(year, cat) %>% 
  summarize(pop = sum_NA(pop), .groups = "drop") %>% 
  sszplot(aes_x = "year", aes_y = "pop", aes_col = "cat",
          labs_y = "people",
          scale_y = c(0, NA),
          width = 8, height = 5,
          name = plot_name("1512_pop_new-prev_80plus")
  )
```

### age categories, by year
one category for 80+

```{r}
#| label: fig-1513
#| fig-cap: previous and new population by age categories
#| fig-width: 9
#| fig-height: 6

sszplot(pop_age_new_prev,
  aes_x = "year", aes_y = "pop", aes_col = "cat",
  labs_y = "people",
  wrap = "age_class", ncol = 3,  
  scale_y = c(0, NA),
  width = 8, height = 5,
  name = plot_name("1513_pop_new_prev_a")
)
```

### only younger categories

```{r}
#| label: fig-1514
#| fig-cap: previous and new population for 19- by age categories

pop_age_new_prev %>% 
  filter(age_class %in% c("0-9", "10-19")) %>% 
  sszplot(aes_x = "year", aes_y = "pop", aes_col = "cat",
          labs_y = "people",
          wrap = "age_class", ncol = 2,  
          scale_y = c(0, NA),
          width = 10, height = 5,
          name = plot_name("1514_pop_new_prev_a_young")
  )
```

### only elder categories

```{r}
#| label: fig-1515
#| fig-cap: previous and new population for 60+ by age categories
#| fig-width: 14
#| fig-height: 6

pop_age_new_prev %>% 
  filter(age_class %in% c("60-69", "70-79", "80+")) %>% 
  sszplot(aes_x = "year", aes_y = "pop", aes_col = "cat",
          labs_y = "people",
          wrap = "age_class", ncol = 3,  
          scale_y = c(0, NA),
          width = 11, height = 5,
          name = plot_name("1515_pop_new_prev_a_elderly")
  )
```

### new and previous: by dy (selected years only)

```{r}
#| label: fig-1516
#| fig-cap: previous and new population by district
#| fig-width: 10
#| fig-height: 5

pop_dy_new_sel <- pop_dy %>%
  filter(year %in% c(date_end, comp_year)) %>%
  mutate(cat = if_else(year == date_end,
                       paste0(date_end, " (past)"),
                       paste0(comp_year, " (new)")))

pop_dy_prev_sel <- sce %>%
  filter((scenario == text_c[3]) &
           (year == comp_year)) %>%
  group_by(district, year) %>%
    summarize(pop = sum_NA(pop),
              .groups = "drop") %>%
  mutate(cat = paste0(comp_year, " (previous)"))

levels_cate <- c(paste0(date_end, " (past)"), 
                 paste0(comp_year, " (previous)"),                  
                 paste0(comp_year, " (new)")) 
         
pop_dy_new_sel %>%
  bind_rows(pop_dy_prev_sel) %>% 
  mutate(cat = factor(cat, levels = levels_cate)) %>% 
  sszplot(aes_x = "district", aes_y = "pop", aes_fill = "cat",
          geom = "col",
          labs_x = "", labs_y = "people",
          scale_x = uni_d,
          angle = 90,
          name = plot_name("1516_pop_new_prev_dy"),
          width = 9, height = 5
  )
```

## birth

### by year and scenario

```{r}
#| label: fig-1520
#| fig-cap: births by year and scenario

# past and future
bir <- bir_past %>%
  bind_rows(bir_lower) %>%
  bind_rows(bir_middle) %>%
  bind_rows(bir_upper) %>%
  mutate(district = factor(district, uni_d),
         sex = factor(sex, levels = uni_s),
         origin = factor(origin, levels = uni_o))

bir %>%
  group_by(year, scenario) %>%
  summarize(bir = sum(bir), .groups = "drop") %>%
  sszplot(aes_x = "year", aes_y = "bir", aes_col = "scenario",
          labs_y = "births per year",
          scale_y = c(0, NA),
          name = plot_name("1520_bir_yc")
  )
```

### by year, origin and scenario

```{r}
#| label: fig-1521
#| fig-cap: births by year, origin and scenario

bir %>%
  group_by(year, origin, scenario) %>%
  summarize(bir = sum(bir),
            groups = "drop") %>%
  sszplot(aes_x = "year", aes_y = "bir", aes_col = "scenario",
          labs_y = "births per year",
          grid = c(".", "origin"),
          scale_y = c(0, NA),
          name = plot_name("1521_bir_yoc")
  )
```

### by district, year and origin

```{r}
#| label: fig-1522
#| fig-cap: births by district, year and origin
#| fig-width: 10
#| fig-height: 14

bir_dyo <- bir %>%
  filter(scenario %in% uni_c[c(1, 3)]) %>%
  group_by(district, year, origin) %>%
  summarize(bir = sum(bir), .groups = "drop")

sszplot(bir_dyo,
  aes_x = "year", aes_y = "bir", aes_col = "origin",
  wrap = "district", ncol = 4,
  labs_y = "births per year",
  scale_y = c(0, NA),
  i_x = scen_begin,
  width = 10, height = 14,
  name = plot_name("1522_bir_dyo")
)
```

### by district, year and origin; foreign population

```{r}
#| label: fig-1523
#| fig-cap: foreign proportion of births by district, year and origin
#| fig-width: 10
#| fig-height: 14

bir_dyo %>%
  pivot_wider(names_from = "origin", values_from = "bir") %>%
  mutate(foreign_prop = foreign / (Swiss + foreign) * 100) %>%
  sszplot(aes_x = "year", aes_y = "foreign_prop",
          wrap = "district", ncol = 4,
          labs_y = "foreign proportion in %",
          scale_y = c(0, NA),
          i_x = scen_begin,
          width = 10, height = 14,
          name = plot_name("1523_bir_dyo_foreign")
  )
```

## death

### by year and scenario

```{r}
#| label: fig-1530
#| fig-cap: deaths by year and scenario

# past and future
dea <- dem_future %>%
  select(year, age, sex, scenario, dea) %>%
  group_by(year, age, sex, scenario) %>%
  summarize(dea = sum(dea), .groups = "drop") %>%
  bind_rows(dea_past) %>%
  left_join(look_a3, by = "age") %>%
  mutate(sex = factor(sex, levels = uni_s))

dea %>%
  group_by(year, scenario) %>%
  summarize(dea = sum(dea), .groups = "drop") %>%
  sszplot(aes_x = "year", aes_y = "dea", aes_col = "scenario",
          labs_y = "deaths per year",
          scale_y = c(0, NA),
          name = plot_name("1530_dea_yc")
  )
```

### by year, age and scenario

```{r}
#| label: fig-1531
#| fig-cap: deaths by year, age and scenario

dea %>%
  group_by(year, age_3, scenario) %>%
  summarize(dea = sum(dea), .groups = "drop") %>%
  sszplot(aes_x = "year", aes_y = "dea", aes_col = "scenario",
          labs_y = "deaths per year",
          wrap = "age_3", ncol = 5,
          scale_y = c(0, NA),
          width = 12, height = 6,
          name = plot_name("1531_dea_yac")
  )
```

### by year and sex

```{r}
#| label: fig-15232
#| fig-cap: deaths by year and sex

dea %>%
  filter(scenario %in% uni_c[c(1, 3)]) %>%
  group_by(year, sex) %>%
  summarize(dea = sum(dea), .groups = "drop") %>%
  sszplot(aes_x = "year", aes_y = "dea", aes_col = "sex",
          labs_y = "deaths per year",
          scale_y = c(0, NA),
          geom = "line",
          name = plot_name("1532_dea_ys")
  )
```

### by year, age and sex

```{r}
#| label: fig-1533
#| fig-cap: deaths by year, age and sex

dea %>%
  filter(scenario %in% uni_c[c(1, 3)]) %>%
  group_by(year, age_3, sex) %>%
  summarize(dea = sum(dea), .groups = "drop") %>%
  sszplot(aes_x = "year", aes_y = "dea", aes_col = "sex",
          labs_y = "deaths per year",
          wrap = "age_3", ncol = 5,
          scale_y = c(0, NA),
          i_x = scen_begin,
          width = 12, height = 6,
          name = plot_name("1533_dea_yas")
  )
```

## immigration

### by year and scenario

```{r}
#| label: fig-1540
#| fig-cap: immigration by year and scenario

# past and future
imm <- dem_future %>%
  select(district, year, age, sex, origin, scenario, imm) %>%
  bind_rows(imm_past) %>%
  left_join(look_a3, by = "age") %>%
  mutate(district = factor(district, uni_d),
         sex = factor(sex, levels = uni_s),
         origin = factor(origin, levels = uni_o))

imm %>%
  group_by(year, scenario) %>%
  summarize(imm = sum(imm), .groups = "drop") %>%
  sszplot(aes_x = "year", aes_y = "imm", aes_col = "scenario",
          labs_y = "immigration per year",
          scale_y = c(0, NA),
          name = plot_name("1540_imm_yc")
  )
```

### by year and age

```{r}
#| label: fig-1541
#| fig-cap: immigration by year and age

imm %>%
  filter(scenario %in% uni_c[c(1, 3)]) %>%
  group_by(year, age_3) %>%
  summarize(imm = sum(imm), .groups = "drop") %>%
  sszplot(aes_x = "year", aes_y = "imm",
          labs_y = "immigration per year",
          wrap = "age_3", ncol = 5,
          scale_y = c(0, NA),
          i_x = scen_begin,
          width = 12, height = 6,
          name = plot_name("1541_imm_ya")
  )
```

### by year, age and origin

```{r}
#| label: fig-1542
#| fig-cap: immigration by year, age and origin

imm %>%
  filter(scenario %in% uni_c[c(1, 3)]) %>%
  group_by(year, age_3, origin) %>%
  summarize(imm = sum(imm), .groups = "drop") %>%
  sszplot(aes_x = "year", aes_y = "imm", aes_col = "origin",
          labs_y = "immigration per year",
          wrap = "age_3", ncol = 5,
          scale_y = c(0, NA),
          i_x = scen_begin,
          width = 12, height = 6,
          name = plot_name("1542_imm_yao")
  )
```

### by district, year and origin

```{r}
#| label: fig-1543
#| fig-cap: immigration by district, year and origin
#| fig-width: 10
#| fig-height: 14

imm_dyo <- imm %>%
  filter(scenario %in% uni_c[c(1, 3)]) %>%
  group_by(district, year, origin) %>%
  summarize(imm = sum(imm), .groups = "drop")

sszplot(imm_dyo,
  aes_x = "year", aes_y = "imm", aes_col = "origin",
  wrap = "district", ncol = 4,
  labs_y = "immigration per year",
  scale_y = c(0, NA),
  gridscale = "free_y",
  i_x = scen_begin,
  width = 10, height = 14,
  name = plot_name("1543_imm_dyo")
)
```

### by district, year and origin; foreign population

```{r}
#| label: fig-1544
#| fig-cap: foreign proportion of immigration by district, year and origin
#| fig-width: 10
#| fig-height: 14

imm_dyo %>%
  pivot_wider(names_from = "origin", values_from = "imm") %>%
  mutate(foreign_prop = foreign / (Swiss + foreign) * 100) %>%
  sszplot(aes_x = "year", aes_y = "foreign_prop",
          wrap = "district", ncol = 4,
          labs_y = "foreign proportion in %",
          scale_y = c(0, NA),
          i_x = scen_begin,
          width = 10, height = 14,
          name = plot_name("1544_imm_dyo_foreign")
  )
```

## emigration

### by year and scenario

```{r}
#| label: fig-1550
#| fig-cap: emigration by year and scenario

# past and future
emi <- dem_future %>%
  select(district, year, age, sex, origin, scenario, emi) %>%
  bind_rows(emi_past) %>%
  left_join(look_a3, by = "age") %>%
  mutate(district = factor(district, uni_d),
         sex = factor(sex, levels = uni_s),
         origin = factor(origin, levels = uni_o))

emi %>%
  group_by(year, scenario) %>%
  summarize(emi = sum(emi), .groups = "drop") %>%
  sszplot(aes_x = "year", aes_y = "emi", aes_col = "scenario",
          labs_y = "emigration per year",
          scale_y = c(0, NA),
          name = plot_name("1550_emi_yc")
  )
```

### by year and age

```{r}
#| label: fig-1551
#| fig-cap: emigration by year and age

emi %>%
  filter(scenario %in% uni_c[c(1, 3)]) %>%
  group_by(year, age_3) %>%
  summarize(emi = sum(emi), .groups = "drop") %>%
  sszplot(aes_x = "year", aes_y = "emi",
          labs_y = "emigration per year",
          wrap = "age_3", ncol = 5,
          scale_y = c(0, NA),
          i_x = scen_begin,
          width = 12, height = 6,
          name = plot_name("1551_emi_ya")
  )
```

### by year, age and origin

```{r}
#| label: fig-1552
#| fig-cap: emigration by year, age and origin

emi %>%
  filter(scenario %in% uni_c[c(1, 3)]) %>%
  group_by(year, age_3, origin) %>%
  summarize(emi = sum(emi), .groups = "drop") %>%
  sszplot(aes_x = "year", aes_y = "emi", aes_col = "origin",
          labs_y = "emigration per year",
          wrap = "age_3", ncol = 5,
          scale_y = c(0, NA),
          i_x = scen_begin,
          width = 12, height = 6,
          name = plot_name("1552_emi_yao")
  )
```

### by district, year and origin

```{r}
#| label: fig-1553
#| fig-cap: emigration by district, year and origin
#| fig-width: 10
#| fig-height: 14

emi_dyo <- emi %>%
  filter(scenario %in% uni_c[c(1, 3)]) %>%
  group_by(district, year, origin) %>%
  summarize(emi = sum(emi), .groups = "drop")

sszplot(emi_dyo,
  aes_x = "year", aes_y = "emi", aes_col = "origin",
  wrap = "district", ncol = 4,
  labs_y = "emigration per year",
  scale_y = c(0, NA),
  gridscale = "free_y",
  i_x = scen_begin,
  width = 10, height = 14,
  name = plot_name("1553_emi_dyo")
)
```

### by district, year and origin; foreign population

```{r}
#| label: fig-1554
#| fig-cap: foreign proportion of emigration by district, year and origin
#| fig-width: 10
#| fig-height: 14

emi_dyo %>%
  pivot_wider(names_from = "origin", values_from = "emi") %>%
  mutate(foreign_prop = foreign / (Swiss + foreign) * 100) %>%
  sszplot(aes_x = "year", aes_y = "foreign_prop",
          wrap = "district", ncol = 4,
          labs_y = "foreign proportion in %",
          scale_y = c(0, NA),
          i_x = scen_begin,
          width = 10, height = 14,
          name = plot_name("1553_emi_dyo_foreign")
  )
```

## net migration

### by year and scenario

```{r}
#| label: fig-1560
#| fig-cap: net migration by year and scenario

# calculate net migration
net <- as_tibble(expand_grid(district = uni_d,
                             year = date_start:scen_end,
                             age = age_min:age_max,
                             sex = uni_s,
                             origin = uni_o,
                             scenario = uni_c)) %>%
  left_join(look_a3, by = "age") %>%
  left_join(imm, by = c("district", "year", "age", "sex", "origin", "scenario", "age_3")) %>%
  left_join(emi, by = c("district", "year", "age", "sex", "origin", "scenario", "age_3")) %>%
  replace_na(list(imm = 0, emi = 0)) %>%
  mutate(net = if_else(((year < scen_begin) & (scenario != uni_c[1])) |
                         ((year >= scen_begin) & (scenario == uni_c[1])),
                       NA_real_, imm - emi))

net %>%
  group_by(year, scenario) %>%
  summarize(net = sum(net), .groups = "drop") %>%
  sszplot(aes_x = "year", aes_y = "net", aes_col = "scenario",
          labs_y = "net migration per year",
          scale_y = c(0, NA),
          i_y = 0,
          name = plot_name("1560_net_yc")
  )
```

### by district, year and origin

```{r}
#| label: fig-1561
#| fig-cap: net migration by district, year and origin
#| fig-width: 10
#| fig-height: 14

net %>%
  filter(scenario %in% uni_c[c(1, 3)]) %>%
  group_by(district, year, origin) %>%
  summarize(net = sum_NA(net), .groups = "drop") %>%
  sszplot(aes_x = "year", aes_y = "net", aes_col = "origin",
          wrap = "district", ncol = 4,
          labs_y = "net migration per year",
          scale_y = c(0, NA),
          i_x = scen_begin,
          width = 10, height = 14,
          name = plot_name("1561_net_dyo")
  )
```

foreign proportion: not possible to calculate for net migration
cannot be applied here
e.g. low values in the denominator if negative and positive value

## naturalization

### by year and scenario

```{r}
#| label: fig-1570
#| fig-cap: naturalization by year and scenario

# past and future
nat <- nat_future %>%
  bind_rows(nat_past) %>%
  left_join(look_a3, by = "age") %>%
  mutate(
    district = factor(district, levels = uni_d),
    sex = factor(sex, levels = uni_s)
  )

nat %>%
  group_by(year, scenario) %>%
  summarize(nat = sum(nat),
            .groups = "drop") %>%
  sszplot(aes_x = "year", aes_y = "nat", aes_col = "scenario",
          labs_y = "naturalizations per year",
          scale_y = c(0, NA),
          name = plot_name("1570_nat_yc")
  )
```

### by district and year

```{r}
#| label: fig-1571
#| fig-cap: naturalization by district and year
#| fig-width: 10
#| fig-height: 14

nat %>%
  filter(scenario %in% uni_c[c(1, 3)]) %>%
  group_by(district, year) %>%
  summarize(nat = sum(nat),
            .groups = "drop") %>%
  sszplot(aes_x = "year", aes_y = "nat",
          wrap = "district", ncol = 4,
          labs_y = "naturalizations per year",
          scale_y = c(0, NA),
          i_x = scen_begin,
          width = 10, height = 14,
          name = plot_name("1571_nat_dy")
  )
```

## relocation

### by year, scenario and category
past: no district
WHY? since for future data only one district available
one district does not make sense for relocation
(the district comes from immigration* and emigration*)
```{r}
#| label: fig-1580
#| fig-cap: relocation by year, scenaio and category

# categories
uni_cat <- c("data", "from immigration*", "from emigration*")

# past
rel_past_yaso <- rel_past %>%
  select(year, age, sex, origin, scenario, rel) %>%
  group_by(year, age, sex, origin, scenario) %>%
  summarize(rel = sum(rel), .groups = "drop") %>%
  mutate(cat = factor(uni_cat[1], levels = uni_cat))

# future
rel_future_yaso <- dem_future %>%
  select(year, age, sex, origin, scenario, rei, ree) %>%
  group_by(year, age, sex, origin, scenario) %>%
  summarize(rei = sum(rei), ree = sum(ree), .groups = "drop") %>%
  pivot_longer(cols = c("rei", "ree"), values_to = "rel", names_to = "category") %>%
  mutate(cat = factor(if_else(category == "rei", uni_cat[2], uni_cat[3]), levels = uni_cat)) %>%
  select(year, age, sex, origin, scenario, rel, cat)

# past and future combined
rel <- rel_past_yaso %>%
  bind_rows(rel_future_yaso) %>%
  group_by(year, scenario, cat) %>%
  summarize(rel = sum(rel), .groups = "drop") %>%
  sszplot(aes_x = "year", aes_y = "rel", aes_col = "scenario",
          aes_ltyp = "cat",
          labs_y = "relocations per year",
          scale_y = c(0, NA),
          quotes = quote(scale_linetype_manual(values = c("dashed", "solid", "dotted"))),
          name = plot_name("1580_rel_yct")
  )
```
