---
title: "Population scenarios: birth plots"
author: "Klemens Rosin, Daniel Baumgartner"
params:
  pdf_output: FALSE
---

```{r}
#| label: prep

source("1_code/0000_general/general_utils.R")
util_gf()
run_scen("middle", "bir")

# knitr::opts_knit$set(base.dir = res_path)

```

# Fertility

## TFR (total fertility rate)

### plots to define the base period for fertility prediction

```{r}
#| label: fig-tfr_y
#| fig-cap: "total fertility rate by year"

tfr_y <- group_by(fer_ya, year) %>%
  summarize(
    tfr_y = sum_NA(fer_ya / 100),
    .groups = "drop"
  )

sszplot(tfr_y,
  aes_x = "year", aes_y = "tfr_y",
  labs_y = "TFR", i_x = "5",
  geom = c("line", "point"),
  name = plot_name("0100_TFR_by-year")
)
```


```{r}
#| label: fig-tfr_yo
#| fig-cap: "total fertility rate by year and origin"

tfr_yo <- group_by(fer_yao, year, origin) %>%
  summarize(
    tfr_yo = sum_NA(fer_yao / 100),
    .groups = "drop"
  )

sszplot(tfr_yo,
  aes_x = "year", aes_y = "tfr_yo", aes_col = "origin",
  labs_y = "TFR", i_x = "5",
  geom = c("line", "point"),
  name = plot_name("0101_TFR_by-year-origin")
)
```

```{r}
#| label: fig-tfr_ya1
#| fig-cap: "total fertility rate by year and age class (3)"

tfr_ya1 <- left_join(fer_ya, look_a1, by = "age") %>%
  group_by(year, age_1) %>%
  summarize(
    tfr_ya1 = sum_NA(fer_ya / 100),
    .groups = "drop"
  ) %>%
  rename(age = age_1)

sszplot(tfr_ya1,
  aes_x = "year", aes_y = "tfr_ya1", aes_col = "age",
  i_x = "5", labs_y = "TFR",
  geom = c("line", "point"),
  name = plot_name("0102_TFR_by-year-age1")
)
```

```{r}
#| label: fig-tfr_ya2
#| fig-cap: "total fertility rate by year and age class (5)"

tfr_ya2 <- left_join(fer_ya, look_a2, by = "age") %>%
  group_by(year, age_2) %>%
  summarize(
    tfr_ya2 = sum_NA(fer_ya / 100),
    .groups = "drop"
  ) %>%
  rename(age = age_2)

sszplot(tfr_ya2,
  aes_x = "year", aes_y = "tfr_ya2", aes_col = "age",
  i_x = "5", labs_y = "TFR",
  geom = c("line", "point"),
  name = plot_name("0103_TFR_by-year-age2")
)
```

```{r}
#| label: fig-tfr_y1o
#| fig-cap: "total fertility rate by year, origin and age class (3)"
#| fig-width: 16
#| fig-height: 5

tfr_ya1o <- left_join(fer_yao, look_a1, by = "age") %>%
  group_by(year, age_1, origin) %>%
  summarize(
    tfr_ya1o = sum_NA(fer_yao / 100),
    .groups = "drop"
  ) %>%
  rename(age = age_1)

sszplot(tfr_ya1o,
  aes_x = "year", aes_y = "tfr_ya1o", aes_col = "origin",
  wrap = "age", ncol = nlevels(tfr_ya1o$age),
  labs_y = "TFR", i_x = "5",
  geom = c("line", "point"),
  name = plot_name("0104_TFR_by-year-age1-origin"),
  width = 16, height = 5
)
```

```{r}
#| label: fig-tfr_ya2o
#| fig-cap: "total fertility rate by year, origin and age class (5)"
#| fig-width: 16
#| fig-height: 5

tfr_ya2o <- left_join(fer_yao, look_a2, by = "age") %>%
  group_by(year, age_2, origin) %>%
  summarize(
    tfr_ya2o = sum_NA(fer_yao / 100),
    .groups = "drop"
  ) %>%
  rename(age = age_2)

sszplot(tfr_ya2o,
  aes_x = "year", aes_y = "tfr_ya2o", aes_col = "origin",
  wrap = "age", ncol = nlevels(tfr_ya2o$age),
  labs_y = "TFR", i_x = "5",
  geom = c("line", "point"),
  name = plot_name("0105_TFR_by-year-age2"),
  width = 16, height = 5
)
```

### fertility plots (before any corrections)

```{r}
#| label: fig-fer_dyao
#| fig-cap: "fertility by district, year, age, origin"
#| fig-keep: all
#| fig-subcap: !expr paste("District of", levels(uni_d))
#| fig-width: 11
#| fig-height: 7

name <- plot_name("0110_fertility_by-district-year-age-origin")

sszplot(filter(fer_dyao, year >= bir_base_begin),
  aes_x = "age", aes_y = "fer_dyao", aes_col = "origin",
  wrap = "as.factor(year)", labs_y = "fertility rate (in % per year)",
  name = name,
  width = 11, height = 7,
  multi = uni_d
)

```

```{r}
#| label: fig-fer_yao
#| fig-cap: "fertility by year, age, origin"
#| fig-width: 11
#| fig-height: 7

sszplot(filter(fer_yao, year >= bir_base_begin),
  aes_x = "age", aes_y = "fer_yao", aes_col = "origin",
  wrap = "as.factor(year)", labs_y = "fertility rate (in % per year)",
  name = plot_name("0111_fertility_by-year-age-origin"),
  width = 11, height = 7
)
```

```{r}
#| label: fig-fer_ya
#| fig-cap: "fertility by year, age"
#| fig-width: 11
#| fig-height: 7

sszplot(filter(fer_ya, year >= bir_base_begin),
  aes_x = "age", aes_y = "fer_ya", wrap = "as.factor(year)",
  labs_y = "fertility rate (in % per year)",
  name = plot_name("0112_fertility_by-year-age"),
  width = 11, height = 7
)
```

## corrected fertility:

```{r}
#| label: fig-fer_cor
#| fig-cap: "initial vs. corrected fertility"
#| fig-subcap: !expr paste("District of", levels(uni_d))
#| fig-width: 13
#| fig-height: 8

cor_level <- c("initial", "corrected")

fer_cor <- select(fer_tail, district, year, origin, age, fer_dyao, fer) %>%
  pivot_longer(c(fer_dyao, fer), names_to = "category", values_to = "fer") %>%
  mutate(cat = factor(if_else(category == "fer_dyao",
    cor_level[1], cor_level[2]
  ), levels = cor_level)) %>%
  select(district, year, origin, age, cat, fer)

sszplot(fer_cor,
  aes_x = "age", aes_y = "fer", aes_col = "origin", aes_ltyp = "cat",
  wrap = "as.factor(year)",
  labs_y = "fertility rate (in % per year)",
  name = plot_name("0120_fertility_tail-correction"),
  width = 13, height = 8,
  multi = uni_d
)
```

```{r}
#| label: fig-fer_tail
#| fig-cap: "cumulative population from the tails"
#| fig-subcap: !expr paste("District of", levels(uni_d))
#| fig-width: 13
#| fig-height: 8

sszplot(fer_tail,
  aes_x = "age", aes_y = "low_cum", aes_col = "origin",
  wrap = "as.factor(year)",
  i_y = c(bir_thres_origin, bir_thres_overall, bir_thres_const),
  labs_y = "cumulative population from tails",
  multi = uni_d,
  name = plot_name("0121_cumulative-population-from_tails"),
  width = 13, height = 8,
  quotes = quote(geom_line(aes(x = age, y = up_cum, color = origin)))
)
```

```{r}
#| label: fig-fit_dat
#| fig-cap: smooth the corrected fertility rate"
#| fig-subcap: !expr paste("District of", levels(uni_d))
#| fig-width: 13
#| fig-height: 8

fit_lev <- c("initial", "smoothed")

fit_dat <- select(fer_fit, district, year, origin, age, fer, fer_fit) %>%
  pivot_longer(c(fer, fer_fit), names_to = "category", values_to = "fer") %>%
  mutate(cat = factor(if_else(category == "fer",
    fit_lev[1], fit_lev[2]
  ), levels = fit_lev)) %>%
  select(district, year, age, origin, cat, fer)

# plot:
sszplot(fit_dat,
  aes_x = "age", aes_y = "fer", aes_col = "origin", aes_ltyp = "cat",
  wrap = "as.factor(year)",
  labs_y = "fertility rate (in % per year)",
  name = plot_name("0130_fertility_fit"),
  width = 13, height = 8,
  multi = uni_d
)
```

## Prediction

```{r}
#| label: fig-fer_pred
#| fig-cap: "plot the predictions: age distribution by district and year"
#| fig-subcap: !expr paste("Origin", levels(uni_o))
#| fig-width: 12
#| fig-height: 14

sszplot(fer_pred,
  aes_x = "age", aes_y = "fer_all", aes_col = "year",
  wrap = "district",
  labs_y = "fertility rate (in % per year)",
  scale_y = c(0, bir_plot_lim),
  name = plot_name("0140_fertility-prediction_by-district"),
  width = 12, height = 14,
  multi = uni_o
)
```

swiss

```{r}
#| label: fig-age_dat_swiss
#| fig-cap: "predictions: along year, for selected age"
#| fig-subcap: !expr paste("District of", levels(uni_d))
#| fig-width: 11
#| fig-height: 5

# selected age
uni_age <- sort(unique(fer_pred$age))
sel_age <- uni_age[(uni_age %% 5) == 0]

age_dat <- filter(fer_pred, (origin == uni_o[1]) & (age %in% sel_age))
sszplot(age_dat,
  aes_x = "year", aes_y = "fer_fit",
  labs_y = "fertility rate (in % per year)",
  wrap = "age", ncol = 4,
  scale_y = c(0, bir_plot_lim),
  title = paste0("as.character(paste0('", levels(uni_o)[uni_o == uni_o[1]], ": ', x))"),
  geom = "point",
  name = plot_name("0141_fertility-prediction_by-district_along-year_Swiss"),
  width = 11, height = 5,
  multi = uni_d,
  quotes = c(
    quote(geom_line(aes(x = year, y = pred), linetype = 2)),
    quote(geom_line(aes(x = year, y = pred_mean), linetype = 3)),
    quote(geom_line(aes(x = year, y = pred_roll), linetype = 1))
  )
)
```

foreign

```{r}
#| label: fig-age_dat_foreign
#| fig-cap: "predictions: along year, for selected age"
#| fig-subcap: !expr paste("District of", levels(uni_d))
#| fig-width: 11
#| fig-height: 5

# plot: foreign
age_dat <- filter(fer_pred, (origin == uni_o[2]) & (age %in% sel_age))
sszplot(age_dat,
  aes_x = "year", aes_y = "fer_fit",
  labs_y = "fertility rate (in % per year)",
  wrap = "age", ncol = 4,
  scale_y = c(0, bir_plot_lim),
  title = paste0("as.character(paste0('", levels(uni_o)[uni_o == uni_o[2]], ": ', x))"),
  geom = "point",
  name = plot_name("0142_fertility-prediction_by-district_along-year_foreign"),
  width = 11, height = 5,
  multi = uni_d,
  quotes = c(
    quote(geom_line(aes(x = year, y = pred), linetype = 2)),
    quote(geom_line(aes(x = year, y = pred_mean), linetype = 3)),
    quote(geom_line(aes(x = year, y = pred_roll), linetype = 1))
  )
)
```

smoothed (only the prediction years)

```{r}
#| label: fig-sel_dat
#| fig-cap: prediction of fertility rates, smoothed
#| fig-subcap: !expr paste("District of", levels(uni_d))
#| fig-width: 10
#| fig-height: 6

sel_years <- uniy_scen[(uniy_scen %% 10) == 0]
sel_lev <- c("initial", "smoothed")

sel_dat <- pred_fit %>%
  pivot_longer(c(pred_fit, pred_roll), names_to = "category", values_to = "fer") %>%
  mutate(cat = factor(if_else(category == "pred_roll",
    sel_lev[1], sel_lev[2]
  ), levels = sel_lev)) %>%
  filter(year %in% sel_years)

# plot
sszplot(sel_dat,
  aes_x = "age", aes_y = "fer", aes_col = "cat",
  grid = c("origin", "year"),
  labs_y = "fertility rate (in % per year)",
  name = plot_name("0150_fertility-prediction_before-after-fit"),
  width = 10, height = 6,
  multi = uni_d
)
```

### TFR (total fertility rate) of past and future

```{r}
#| label: fig-tfr_dyo
#| fig-cap: TFR by year and origin
#| fig-width: 12
#| fig-height: 14

# TFR
tfr_dyo <- bind_rows(fer_ex_past, fer_ex) %>%
  group_by(district, year, origin) %>%
  summarize(
    TFR = sum_NA(fer / 100),
    .groups = "drop"
  )

# plot
sszplot(tfr_dyo,
  aes_x = "year", aes_y = "TFR", aes_col = "origin",
  i_x = c(bir_base_begin, scen_begin),
  wrap = "district", ncol = 4,
  name = plot_name("0160_TFR_by-district-origin"),
  width = 12, height = 14
)
```

```{r}
#| label: fig-tfr_a1
#| fig-cap: TFR by year and age class (3 groups)
#| fig-subcap: !expr paste("Origin", levels(uni_o))
#| fig-width: 12
#| fig-height: 14

tfr_a1 <- bind_rows(fer_ex_past, fer_ex) %>%
  left_join(look_a1, by = "age") %>%
  group_by(district, year, origin, age_1) %>%
  summarize(
    TFR = sum_NA(fer / 100),
    .groups = "drop"
  ) %>%
  rename(age = age_1)

# plot
sszplot(tfr_a1,
  aes_x = "year", aes_y = "TFR", aes_col = "age",
  i_x = c(bir_base_begin, scen_begin),
  labs_col = "age",
  wrap = "district", ncol = 4,
  name = plot_name("0161_TFR_by-district-origin-age1"),
  width = 12, height = 14,
  multi = uni_o
)
```

```{r}
#| label: fig-tfr_a2
#| fig-cap: TFR by year and age class (5 groups)
#| fig-subcap: !expr paste("Origin", levels(uni_o))
#| fig-width: 12
#| fig-height: 14

tfr_a2 <- bind_rows(fer_ex_past, fer_ex) %>%
  left_join(look_a2, by = "age") %>%
  group_by(district, year, origin, age_2) %>%
  summarize(
    TFR = sum_NA(fer / 100),
    .groups = "drop"
  ) %>%
  rename(age = age_2)

# plot
sszplot(tfr_a2,
  aes_x = "year", aes_y = "TFR", aes_col = "age",
  i_x = c(bir_base_begin, scen_begin),
  labs_col = "age",
  wrap = "district", ncol = 4,
  name = plot_name("0162_TFR_by-district-origin-age2"),
  width = 12, height = 14,
  multi = uni_o
)
```

# Origin

## Origin change

```{r}
#| label: fig-cha_yo
#| fig-cap: origin change by year, origin

# change by year, origin
cha_yo <- group_by(cha, year, origin) %>%
  summarize(
    change = sum(change),
    total = sum(total),
    .groups = "drop"
  ) %>%
  mutate(cha_yo = if_else(total == 0, NA_real_, round(change / total * 100, round_rate)))

year5 <- cha_yo$year[cha_yo$year %% 5 == 0]

sszplot(cha_yo,
  aes_x = "year", aes_y = "cha_yo", aes_col = "origin",
  geom = c("line", "point"),
  i_x = year5,
  labs_y = "origin change in %",
  name = plot_name("0170_origin-change_by-year-origin")
)
```

```{r}
#| label: fig-cha_ya1o
#| fig-cap: origin change by year, age class (3), origin
#| fig-width: 12

cha_ya1o <- left_join(cha, look_a1, by = "age") %>%
  group_by(year, age_1, origin) %>%
  summarize(
    change = sum(change),
    total = sum(total),
    .groups = "drop"
  ) %>%
  mutate(cha_ya1o = if_else(total == 0, NA_real_, round(change / total * 100, round_rate))) %>%
  rename(age = age_1)

sszplot(cha_ya1o,
  aes_x = "year", aes_y = "cha_ya1o", aes_col = "origin",
  geom = c("line", "point"),
  i_x = year5,
  labs_y = "origin change in %",
  wrap = "age",
  name = plot_name("0171_origin-change_by-year-age1-origin"),
  width = 12
)
```

```{r}
#| label: fig-cha_ya2o
#| fig-cap: origin change by year, age class (5), origin
#| fig-width: 12

cha_ya2o <- left_join(cha, look_a2, by = "age") %>%
  group_by(year, age_2, origin) %>%
  summarize(
    change = sum(change),
    total = sum(total),
    .groups = "drop"
  ) %>%
  mutate(cha_ya2o = if_else(total == 0, NA_real_, round(change / total * 100, round_rate))) %>%
  rename(age = age_2)

sszplot(cha_ya2o,
  aes_x = "year", aes_y = "cha_ya2o", aes_col = "origin",
  geom = c("line", "point"),
  i_x = year5,
  labs_y = "origin change in %",
  wrap = "age", ncol = nlevels(cha_ya2o$age),
  name = plot_name("0172_origin-change_by-year-age2-origin"),
  width = 12
)
```

```{r}
#| label: fig-cha_dyo
#| fig-cap: origin change by district, year, origin
#| fig-width: 12
#| fig-height: 14

sszplot(cha_dyo,
        aes_x = "year", aes_y = "cha_dyo", aes_col = "origin",
        geom = c("line", "point"),
        i_x = year5,
        labs_y = "origin change in %",
        wrap = "district", ncol = 4,
        name = plot_name("0173_origin-change_by-district-year-origin"),
        width = 12, height = 14
)
```

```{r}
#| label: fig-cha_dya1f
#| fig-cap: origin change by district, year, age1 (foreign only, since few cases for Swiss)
#| fig-width: 12
#| fig-height: 14

cha_dya1f <- left_join(cha, look_a1, by = "age") %>%
  filter(origin == "foreign") %>%
  group_by(district, year, age_1) %>%
  summarize(
    change = sum(change),
    total = sum(total),
    .groups = "drop"
  ) %>%
  mutate(cha_dya1f = if_else(total == 0, NA_real_, round(change / total * 100, round_rate))) %>%
  rename(age = age_1)


sszplot(cha_dya1f,
  aes_x = "year", aes_y = "cha_dya1f", aes_col = "age",
  geom = c("line", "point"),
  i_x = year5,
  labs_y = "origin change in %",
  wrap = "district", ncol = 4,
  name = plot_name("0174_origin-change_by-district-year-age1-foreign"),
  width = 12, height = 14
)
```

## Prediction of origin change

```{r}
#| label: fig-cha_pred
#| fig-cap: predicted origin change by year and origin
#| fig-width: 12
#| fig-height: 14

sszplot(cha_pred,
  aes_x = "year", aes_y = "cha_all", aes_col = "origin",
  i_x = c(bir_cha_base_begin, bir_cha_base_end),
  labs_y = "origin change in %",
  wrap = "district", ncol = 4,
  name = plot_name("0175_origin-change_by-district-year-origin_past-future"),
  width = 12, height = 14
)
```

# Sex ratio

## Current proportion

```{r}
#| label: fig-pro_male
#| fig-cap: proportion of sexes by year

year5 <- pro_male$year[pro_male$year %% 5 == 0]

sszplot(pro_male,
  aes_x = "year", aes_y = "pro_male",
  geom = c("line", "point"),
  i_x = year5, i_y = 50,
  labs_y = "proportion male in %",
  scale_y = c(0, 70), breaks = seq(0, 70, 10),
  name = plot_name("0190_sex-ratio_by-year")
)
```

## Prediction of proportion

```{r}
#| label: fig-pro_male_pred
#| fig-cap: predicted mean proportion of sexes by year

sszplot(pro_male,
  aes_x = "year", aes_y = "pro_male",
  geom = c("line", "point"),
  i_x = year5,
  labs_y = "proportion male in %",
  scale_y = c(0, 70), breaks = seq(0, 70, 10),
  name = plot_name("0191_sex-ratio_by-year_with-mean"),
  quotes = quote(geom_hline(
    yintercept = pred_mean$pred_mean,
    col = col_6[1],
    linetype = 2
  ))
)
```
